include "kamon"

akka {
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  management {
    http {
      hostname = "0.0.0.0"
      bind-hostname = 0.0.0.0
      route-providers-read-only = false
    }
    health-checks {
      readiness-checks {
        ready = "it.pagopa.interop.authorizationprocess.server.impl.HealthCheck"
      }
      liveness-checks {
        live = "it.pagopa.interop.authorizationprocess.server.impl.LiveCheck"
      }
    }
  }
}

authorization-process {
  port = 8088
  issuer = "f57e6d40-1864-4ce7-b23e-f0c178c3e1f3"
  jwt {
    audience = [ ${MAIN_AUDIENCE} ]
  }
  services {
     agreement-management = "https://fe-test.gateway-private.test.pdnd-interop.pagopa.it/agreement-management/0.1"
     catalog-management = "https://fe-test.gateway-private.test.pdnd-interop.pagopa.it/catalog-management/0.1"
     authorization-management = "https://fe-test.gateway-private.test.pdnd-interop.pagopa.it/authorization-management/0.1"
     party-management = "https://fe-test.gateway-private.test.pdnd-interop.pagopa.it/party-management/0.1"
     purpose-management = "https://fe-test.gateway-private.test.pdnd-interop.pagopa.it/purpose-management/0.1"
     user-registry-management = "https://gateway.interop.pdnd.dev/pdnd-interop-uservice-user-registry-management/0.1"
     user-registry-api-key = "a_secret_key"
  }
}

interop-commons {
  jwt {
    public-keys {
      url = ${WELL_KNOWN_URL}
    }
  }
}
