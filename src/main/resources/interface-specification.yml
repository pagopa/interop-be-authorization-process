openapi: 3.0.3

info:
  title: Security Process Micro Service
  description: This service is the security supplier
  version: 0.0.1
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com
  termsOfService: 'http://swagger.io/terms/'
  x-api-id: an x-api-id
  x-summary: an x-summary
servers:
  - url: http://localhost:8088/pdnd-interop-uservice-authorization-process/0.0.1
    description: This service is the security supplier
#security:
#  - bearerAuth: [ ]
tags:
  - name: auth
    description: Get security information
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /as/token.oauth2:
    post:
      tags:
        - auth
      summary: Create a new access token
      description: Return ok
      operationId: createToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenRequest'
      responses:
        "200":
          description: |-
            an Access token
          headers:
            Cache-Control:
              schema:
                type: string
                default: no-cache, no-store
              description: |-
                no-cache, no-store
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCredentialsResponse'
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /clients:
    post:
      tags:
        - auth
      summary: Create a new client
      description: Create a new client
      operationId: createClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientSeed'
      responses:
        "201":
          description: Client created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        "422":
          description: Agreement status not valid
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
components:
  schemas:
    AccessTokenRequest:
      type: object
      required:
        - client_assertion
        - client_assertion_type
        - grant_type
        - audience
      properties:
        client_id:
          type: string
          format: uuid
          example: e58035ce-c753-4f72-b613-46f8a17b71cc
        client_assertion:
          type: string
          format: jws
        client_assertion_type:
          type: string
          example: urn%3Aietf%3Aparams%3Aoauth%3Aclient-assertion-type%3Ajwt-bearer
        grant_type:
          type: string
          enum:
            - client_credentials
        audience:
          type: string
          format: uuid
          example: e58035ce-c753-4f72-b613-46f8a17b71cc
    ClientCredentialsResponse:
      type: object
      required:
        - access_token
        - token_type
        - expires_in
      properties:
        access_token:
          type: string
          format: jws
        token_type:
          type: string
          enum:
            - Bearer
            - Agid-Pop
        expires_in:
          type: integer
          format: int64
          maximum: 600
    ClientSeed:
      description: Client creation request body
      type: object
      properties:
        agreementId:
          type: string
          format: uuid
        description:
          type: string
      required:
        - agreementId
        - description
    Client:
      description: Models a Client
      type: object
      properties:
        id:
          type: string
          format: uuid
        agreementId:
          type: string
          format: uuid
        description:
          type: string
        operators:
          type: array
          items:
            type: string
            format: uuid
          uniqueItems: true
      required:
        - id
        - agreementId
        - description
        - operators
    Problem:
      properties:
        detail:
          description:
            A human readable explanation specific to this occurrence of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
        status:
          description:
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description:
            A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: '^[ -~]{0,64}$'
          type: string
      additionalProperties: false
      required:
        - status
        - title
#  securitySchemes:
#    bearerAuth:
#      type: http
#      description: A bearer token in the format of a JWS and comformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).
#      scheme: bearer
#      bearerFormat: JWTly in the editor.

